Object Oriented Programming :

It is an approach that provides a way of modularizing programming, that which can be used to create small partition memory area for both data and objects, which are to be used as templates for creating copies of such modules on demand. 

Object : An object is a real world entity, that which possess 3 characterstics
		known as

		  (i) State

		 (ii) Behaviour

		(iii) Identity

OOPS Features : 
________________

	(i) Encapsualtion : Wrapping up of data and functions into a single unit known as Encapsualtion. (We need to bind data to existing context) 

	(ii) Abstraction : Hiding the irrelevant details of an object that do not contribute to its essential characterstics known as abstraction. 

	*** Encapsulation focuses on showing the relevant details, where abstraction focuses on hiding the irrelevant details ***

	(iii) Inheritance : Deriving a new entity from already existing entity known as inheritance, through inheritance we can reduce the size of the program. 

	 (iv) Polymorphism : The ability to take more than one form known as polymorphism. 

class : A class is a template or blueprint, that which contains combination of data members and member functions.  Members of the class, can be accessable by using instance of the class. 

class class_name
{
   data members;
   member functions;
}

Why Java :
___________

1) Platform Independence : Write Once and Run anywhere. 

2) Console/Windows/Web/Mobile 

3) Packages : Contains grouip of realted classes and interfaces that which belongs to one common group, if you want to overcome the naming conflicts between classes, then we need the help of pacakges. 

Java Features : 
_________________

(i) Simple : Java uses simple C/C++ syntaxes, as a programmer no need to take of internal details like memory management etc...as how much memory allocated to run the program, the same amount of memory will be reallocated automatically.  

(ii) Object Oriented : Java supports all object oriented programming langauges. 

(iii) Compiled and Interpreted : Java programs are compiled first, during compilation java code will be converted into bytecode, then .class file will be created, in interpretation it reads the bytecode line by line and executes. 

(iv) Portable : Ability to run the program without changing the source code, java programs are programs that can run on any env, without changing the source code. 

(v) Securable : Security is key for any kind of application, as java implements various levels of security as

	(a) Compiler 

	(b) Bytecode

	(c) class loader 

(vii) Distributed : By using java, we can implement all distributed and robust applications. 

Java Architecture : 
____________________

1) Java Program : Java code that which stored with extension .java

2) Java Class : Java code after compilation its converted into bytecode, then (.class) file will be created

3) JVM (Java Virtual Machine) 

	(a) Class Loader : Used to load all classes which are required to run the program, there are 2 types of class loaders known as 

		(i) Primordial Class loader : Used to load all system classes which are required to run the program. 

		(ii) Class loader objects : Used to load all custom classes which are required to run the program. 

	(b) JIT Compiler : Converts bytecode into CPU specific format. 

	(c) Execution Manager : Contains QUEUE of programs, which are ready to 
		run where we can execute the program. Before execution it needs
		to undergone security authentication. 

4) Java API : It provides runtime env, that which allows you to run the java program. It has JDK and JRE  

*** The Top level class in java is Object ***

*** The default package in java is java.lang *** 

Access Modifiers : 
___________________

1) private : Allows you to access members within current class. 

2) public  : Allows you to access members within current/derived class. 

3) protected : Allows you to access members within current/derived classes. 

4) default : By default java possesss friendly access modifier, allows you to accces members within all classes of current package. 

Data Types : 
_____________

There are 2 types of data types as

1) values types : int, float, double, char, boolean, byte, short, long etc...

2) refernce types : String, Object 

You can define method main() as 

public static void main(String[] args) {
...
...
}

main() method must be static, as no class object supposed to call the method main. 

You can print any value or message as 

System.out.println() 

	System -> Class
	out -> Console
	println() -> method. 

Increment/Decrement Operators : 
______________________________


int i=0;
i++
++i



public class Quiz3 {
   public static void main(String[] args) {
      char ch='A';
      int x=ch;
      System.out.println(x);
  }
}

public class Quiz4 {
   public static void main(String[] args) {
	byte x=12;
	int b=x;
	System.out.println(b);      
  }
}


public class Quiz6 {

	public static void main(String[] args) {
		byte b=127;
		b=b+15;
		System.out.println(b);
	}
}

Syntax to define a method : 
___________________________


Access_Modifier returnType method_name(Parameters) {
....
....
}

You can create an object to the class, as

class_name object = new class_name();

https://github.com/PrasannaHydTrainer/InfiniteDecember

(91) 9652809038

1) Write a Program to convert Centigrade to radians

2) Write a Program to accept 3 subjects marks out of 100, and display sum and avg. 

Control Structures : 
_____________________

Used to define the flow of the program. 

   -> Branching

	if...else : Executes the statement(s) based on the condition. 

		if (condition) {
			statement(s);
		} else {
			statement(s);
		}

	switch...case : Defines the menu-driven programs. 

	switch(expression) {
		case expression1 :
			statement(s);
			break;		
		case expression2 :
			statement(s);
			break;
		....
		....
		....
		default : 
			....
	}

   -> Looping :

	while loop : this loop executes all the statement(s) repeatedly until the condition remains true, if the condition remains false, then it comes out of the loop. For every loop, basically there are 3 phases as

		(i) Initialization

		(ii) Condition

		(iii) Increment/Decrement 

*** Initialization performed at the beginning of the loop ***

*** Condition performed at the conditional part of the loop ***

*** Increment/Decrement performed before closing the loop ***

while(condition) {
   statement(s);
}

for loop : Execute the statement(s) repeatedly till the conditino remains true. 

for(initilization;condition;increment/decrement) {
...
...
...
}

1) Write a Program to display max. of 3 numbers 

Arrays : 

An array is the finite ordered set of homogeneous elements, means all the elements belongs to same data type. 

Elements of an array are stored in successive memory locations. 

int[] a = new int[]{1,5,23,43,22};

a[0]=1;
a[1]=5;
a[2]=23;
a[3]=43;
a[4]=22;

	int[] a = new int[] {4,23,65,21,53};
//		for(int i=0;i<a.length;i++) {
//			System.out.println(a[i]);
//		}
		for (int i : a) {
			System.out.println(i);
		}


How the foreach loop will work internally ???

Enumerator e = 

In this, at first i points to the first element in Array A, after processing first element, it checks next element is there or not by using hasMoreElements(), if hasMoreElements() returns true, it moves to the next element by using nextElement(), it repeats as soon as hasMoreElements() returns true. 

There are 2 types of memories as 

(i) STACK

(ii) HEAP

*** Value types will be stored in STACK and reference types will be stored in HEAP ***

______________________________________________________________________

public class Q1 {
  public static void main(String[] args) {
     int x;
     System.out.println(x);
  }
}



publc class Q2 {
   int x;
   public static void main(String[] args) {
       System.out.println(new Q2().x);
   }
}

publc class Q2 {
   boolean flag;   
   public static void main(String[] args) {
       System.out.println(new Q2().flag);
   }
}

public class Q4 {
   public static void main(String[] args) {
     System.out.println("5" + 3+8); // 538
     System.out.println("5" + (3+8)); // 511
     System.out.println("5+3" + 8); // 5+38
   }
}

public class Q5 {
   public static void main(String[] args) {
        int[] a = new int[]{1,2,3,4};
        for(int i : a) {
	  System.out.println(a);
        } 
  }
}

StringBuilder is a mutable object, that which allows you to store more than one string value as we can perform any kind of operations. 

https://github.com/PrasannaHydTrainer/InfiniteDecember







































